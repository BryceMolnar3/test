{"ast":null,"code":"var _jsxFileName = \"/Users/brycemolnar/Documents/bbbbbb/CS-410-Senior-Project-Editing-Tool/frontend/src/pages/ManualDifferentiation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Flex, Heading, Text, Button, Select, Progress, VStack, HStack, useToast, Spinner, Alert, AlertIcon } from '@chakra-ui/react';\nimport NavigationBar from '../components/NavigationBar.tsx';\nimport { useDisplaySettings } from '../contexts/DisplaySettingsContext.tsx';\n\n// Types for API responses and requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// API base URL - can be configured based on environment\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\n\n// Function to generate word comparisons from MongoDB data\nfunction generateWordComparisons(baseManuscript, comparisonManuscript) {\n  const comparisons = [];\n\n  // Compare each verse\n  baseManuscript.verses.forEach(baseVerse => {\n    const comparisonVerse = comparisonManuscript.verses.find(v => v.verse_number === baseVerse.verse_number);\n    if (!comparisonVerse) return;\n\n    // Split verses into words and clean them\n    const baseWords = baseVerse.verse_text.toLowerCase().replace(/[.,()]/g, '').split(' ').filter(word => word.length > 0);\n    const comparisonWords = comparisonVerse.verse_text.toLowerCase().replace(/[.,()]/g, '').split(' ').filter(word => word.length > 0);\n\n    // Compare words\n    const maxLength = Math.max(baseWords.length, comparisonWords.length);\n    for (let i = 0; i < maxLength; i++) {\n      const word1 = baseWords[i] || '[missing]';\n      const word2 = comparisonWords[i] || '[missing]';\n      if (word1 !== word2) {\n        comparisons.push({\n          verseNumber: baseVerse.verse_number,\n          word1,\n          word2,\n          position: i + 1,\n          manuscriptSigla: comparisonManuscript.filename.replace('.docx', '')\n        });\n      }\n    }\n  });\n  return comparisons;\n}\n\n// API service for manuscript operations\nconst manuscriptService = {\n  async fetchComparisons() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/documents/`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch manuscripts');\n      }\n      const data = await response.json();\n\n      // Find base manuscript (01)\n      const baseManuscript = data.find(m => m.filename === '02 Paris, Bibliothèque nationale de France, Département des Manuscrits, NAL 1063.docx');\n      if (!baseManuscript) {\n        throw new Error('Base manuscript (01) not found');\n      }\n\n      // Generate comparisons with all other manuscripts\n      const allComparisons = [];\n      data.forEach(manuscript => {\n        if (manuscript.filename !== '01.docx') {\n          const comparisons = generateWordComparisons(baseManuscript, manuscript);\n          allComparisons.push(...comparisons);\n        }\n      });\n      return allComparisons;\n    } catch (error) {\n      throw new Error('Error fetching comparisons: ' + (error instanceof Error ? error.message : 'Unknown error'));\n    }\n  },\n  async saveComparison(data) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/comparisons/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save comparison');\n      }\n      return await response.json();\n    } catch (error) {\n      throw new Error('Error saving comparison: ' + (error instanceof Error ? error.message : 'Unknown error'));\n    }\n  }\n};\n\n// Default variation types (same as in Settings.tsx)\nconst defaultVariationTypes = [\"Different Spelling\", \"Abbreviation\", \"Word Choice\", \"Word Order\", \"Addition\", \"Omission\"];\nfunction ManualDifferentiation() {\n  _s();\n  const {\n    settings\n  } = useDisplaySettings();\n  const [variations, setVariations] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [completedCount, setCompletedCount] = useState(0);\n  const [isSignificant, setIsSignificant] = useState(true);\n  const [variationType, setVariationType] = useState('Different Spelling');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isFetchingData, setIsFetchingData] = useState(true);\n  const [variationTypes, setVariationTypes] = useState(defaultVariationTypes);\n  const toast = useToast();\n\n  // Color mode values\n  const boxBg = settings.theme === 'dark' ? 'gray.800' : 'white';\n  const boxBorderColor = settings.theme === 'dark' ? 'gray.600' : 'gray.200';\n  const textColor = settings.theme === 'dark' ? 'gray.100' : 'gray.600';\n  const inputBg = settings.theme === 'dark' ? 'gray.700' : 'gray.50';\n  const inputBorderColor = settings.theme === 'dark' ? 'gray.500' : 'gray.300';\n\n  // Load variation types on mount\n  useEffect(() => {\n    const savedTypes = localStorage.getItem('variationTypes');\n    if (savedTypes) {\n      try {\n        const types = JSON.parse(savedTypes);\n        setVariationTypes(types);\n        // If current variationType is not in the new types, reset to first type\n        if (!types.includes(variationType)) {\n          setVariationType(types[0]);\n        }\n      } catch (error) {\n        console.error('Error loading variation types:', error);\n      }\n    }\n  }, [variationType]);\n\n  // Fetch variations on component mount\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setIsFetchingData(true);\n        setError(null);\n        const data = await manuscriptService.fetchComparisons();\n        setVariations(data);\n      } catch (error) {\n        setError(error instanceof Error ? error.message : 'Failed to fetch comparisons');\n        toast({\n          title: 'Error fetching comparisons',\n          description: error instanceof Error ? error.message : 'Unknown error occurred',\n          status: 'error',\n          duration: 5000,\n          isClosable: true\n        });\n      } finally {\n        setIsFetchingData(false);\n      }\n    }\n    fetchData();\n  }, [toast]);\n  const currentVariation = variations[currentIndex];\n  const currentNumber = currentIndex + 1;\n  const totalVariations = variations.length;\n  async function handleConfirm() {\n    if (!currentVariation) return;\n    try {\n      setIsLoading(true);\n      setError(null);\n      const result = await manuscriptService.saveComparison({\n        wordComparison: currentVariation,\n        isSignificant,\n        variationType\n      });\n      setCompletedCount(prev => prev + 1);\n      setCurrentIndex(prev => prev + 1);\n      toast({\n        title: 'Variation recorded',\n        description: `Comparison saved with ID: ${result.comparisonId}`,\n        status: 'success',\n        duration: 2000,\n        isClosable: true\n      });\n    } catch (error) {\n      setError(error instanceof Error ? error.message : 'Failed to save comparison');\n      toast({\n        title: 'Error recording variation',\n        description: error instanceof Error ? error.message : 'Unknown error occurred',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }\n  function handleSkip() {\n    setCurrentIndex(prev => prev + 1);\n  }\n  if (isFetchingData) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          bg: \"#08004F\",\n          py: 8,\n          px: 6,\n          position: \"relative\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            fontWeight: \"normal\",\n            ml: 8,\n            color: \"lightgray\",\n            size: \"lg\",\n            children: \"Manual Differentiation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          p: 8,\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Spinner, {\n            size: \"xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            mt: 4,\n            color: textColor,\n            children: \"Loading comparisons...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          bg: \"#08004F\",\n          py: 8,\n          px: 6,\n          position: \"relative\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            fontWeight: \"normal\",\n            ml: 8,\n            color: \"lightgray\",\n            size: \"lg\",\n            children: \"Manual Differentiation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          p: 8,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            status: \"error\",\n            children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentVariation) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          bg: \"#08004F\",\n          py: 8,\n          px: 6,\n          position: \"relative\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            fontWeight: \"normal\",\n            ml: 8,\n            color: \"lightgray\",\n            size: \"lg\",\n            children: \"Manual Differentiation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          p: 8,\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xl\",\n            children: \"All variations have been processed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        bg: \"#08004F\",\n        py: 8,\n        px: 6,\n        position: \"relative\",\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          fontWeight: \"normal\",\n          ml: 8,\n          color: \"lightgray\",\n          size: \"lg\",\n          children: \"Manual Differentiation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 8,\n        maxW: \"800px\",\n        mx: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 8,\n          align: \"stretch\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"2xl\",\n              mb: 4,\n              color: textColor,\n              children: [currentNumber, \" out of \", totalVariations, \" variations completed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Progress, {\n              value: currentNumber / totalVariations * 100,\n              size: \"sm\",\n              colorScheme: \"blue\",\n              borderRadius: \"full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            borderWidth: 1,\n            borderColor: boxBorderColor,\n            borderRadius: \"lg\",\n            p: 8,\n            bg: boxBg,\n            boxShadow: \"sm\",\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              spacing: 6,\n              align: \"stretch\",\n              children: [/*#__PURE__*/_jsxDEV(HStack, {\n                spacing: 4,\n                justify: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"2xl\",\n                  fontWeight: \"medium\",\n                  color: textColor,\n                  children: \"01\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"2xl\",\n                  fontWeight: \"medium\",\n                  color: textColor,\n                  children: \"vs.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"2xl\",\n                  fontWeight: \"medium\",\n                  color: textColor,\n                  children: currentVariation.manuscriptSigla\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                textAlign: \"center\",\n                fontSize: \"md\",\n                color: textColor,\n                children: [\"Verse \", currentVariation.verseNumber, \", Word \", currentVariation.position]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(VStack, {\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  w: \"100%\",\n                  p: 4,\n                  borderWidth: 1,\n                  borderColor: inputBorderColor,\n                  borderRadius: \"md\",\n                  textAlign: \"center\",\n                  bg: inputBg,\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"xl\",\n                    color: textColor,\n                    children: currentVariation.word1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    color: textColor,\n                    mt: 1,\n                    children: \"Manuscript 01\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"lg\",\n                  color: textColor,\n                  children: \"vs.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  w: \"100%\",\n                  p: 4,\n                  borderWidth: 1,\n                  borderColor: inputBorderColor,\n                  borderRadius: \"md\",\n                  textAlign: \"center\",\n                  bg: inputBg,\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"xl\",\n                    color: textColor,\n                    children: currentVariation.word2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    color: textColor,\n                    mt: 1,\n                    children: [\"Manuscript \", currentVariation.manuscriptSigla]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(HStack, {\n                  spacing: 0,\n                  mb: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    flex: 1,\n                    bg: isSignificant ? \"green.500\" : settings.theme === 'dark' ? \"gray.700\" : \"gray.200\",\n                    color: isSignificant ? \"white\" : textColor,\n                    onClick: () => setIsSignificant(true),\n                    _hover: {\n                      bg: isSignificant ? \"green.600\" : settings.theme === 'dark' ? \"gray.600\" : \"gray.300\"\n                    },\n                    borderRightRadius: 0,\n                    py: 6,\n                    children: \"Significant\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    flex: 1,\n                    bg: !isSignificant ? \"gray.500\" : settings.theme === 'dark' ? \"gray.700\" : \"gray.200\",\n                    color: !isSignificant ? \"white\" : textColor,\n                    onClick: () => setIsSignificant(false),\n                    _hover: {\n                      bg: !isSignificant ? \"gray.600\" : settings.theme === 'dark' ? \"gray.600\" : \"gray.300\"\n                    },\n                    borderLeftRadius: 0,\n                    py: 6,\n                    children: \"Insignificant\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  mb: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    mb: 2,\n                    color: textColor,\n                    children: \"Variation type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    value: variationType,\n                    onChange: e => setVariationType(e.target.value),\n                    size: \"lg\",\n                    borderColor: inputBorderColor,\n                    bg: inputBg,\n                    color: textColor,\n                    _hover: {\n                      borderColor: settings.theme === 'dark' ? \"gray.400\" : \"gray.500\"\n                    },\n                    children: variationTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: type,\n                      children: type\n                    }, type, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 442,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                  gap: 4,\n                  justify: \"space-between\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    bg: \"#B8860B\",\n                    color: \"white\",\n                    _hover: {\n                      bg: \"#9A7B0A\"\n                    },\n                    onClick: handleSkip,\n                    size: \"lg\",\n                    px: 8,\n                    isDisabled: isLoading,\n                    borderRadius: \"full\",\n                    children: \"Skip for later\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    colorScheme: \"green\",\n                    onClick: handleConfirm,\n                    size: \"lg\",\n                    px: 12,\n                    isLoading: isLoading,\n                    loadingText: \"Confirming...\",\n                    borderRadius: \"full\",\n                    children: \"Confirm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n}\n_s(ManualDifferentiation, \"6D7lp0NklZF2L54tfoOApqJPpYk=\", false, function () {\n  return [useDisplaySettings, useToast];\n});\n_c = ManualDifferentiation;\nexport default ManualDifferentiation;\nvar _c;\n$RefreshReg$(_c, \"ManualDifferentiation\");","map":{"version":3,"names":["React","useState","useEffect","Box","Flex","Heading","Text","Button","Select","Progress","VStack","HStack","useToast","Spinner","Alert","AlertIcon","NavigationBar","useDisplaySettings","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","generateWordComparisons","baseManuscript","comparisonManuscript","comparisons","verses","forEach","baseVerse","comparisonVerse","find","v","verse_number","baseWords","verse_text","toLowerCase","replace","split","filter","word","length","comparisonWords","maxLength","Math","max","i","word1","word2","push","verseNumber","position","manuscriptSigla","filename","manuscriptService","fetchComparisons","response","fetch","ok","Error","data","json","m","allComparisons","manuscript","error","message","saveComparison","method","headers","body","JSON","stringify","defaultVariationTypes","ManualDifferentiation","_s","settings","variations","setVariations","currentIndex","setCurrentIndex","completedCount","setCompletedCount","isSignificant","setIsSignificant","variationType","setVariationType","isLoading","setIsLoading","setError","isFetchingData","setIsFetchingData","variationTypes","setVariationTypes","toast","boxBg","theme","boxBorderColor","textColor","inputBg","inputBorderColor","savedTypes","localStorage","getItem","types","parse","includes","console","fetchData","title","description","status","duration","isClosable","currentVariation","currentNumber","totalVariations","handleConfirm","result","wordComparison","prev","comparisonId","handleSkip","children","fileName","_jsxFileName","lineNumber","columnNumber","bg","py","px","fontWeight","ml","color","size","p","textAlign","mt","fontSize","maxW","mx","spacing","align","mb","value","colorScheme","borderRadius","borderWidth","borderColor","boxShadow","justify","w","flex","onClick","_hover","borderRightRadius","borderLeftRadius","onChange","e","target","map","type","gap","isDisabled","loadingText","_c","$RefreshReg$"],"sources":["/Users/brycemolnar/Documents/bbbbbb/CS-410-Senior-Project-Editing-Tool/frontend/src/pages/ManualDifferentiation.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Flex,\n  Heading,\n  Text,\n  Button,\n  Select,\n  Progress,\n  VStack,\n  HStack,\n  useToast,\n  Spinner,\n  Alert,\n  AlertIcon,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport NavigationBar from '../components/NavigationBar.tsx';\nimport { useDisplaySettings } from '../contexts/DisplaySettingsContext.tsx';\n\n// Types for API responses and requests\ninterface WordComparison {\n  verseNumber: number;\n  word1: string;\n  word2: string;\n  position: number;\n  manuscriptSigla: string;\n}\n\ninterface ComparisonResult {\n  comparisonId: string;\n  isSignificant: boolean;\n  variationType: string;\n  wordComparison: WordComparison;\n  timestamp: string;\n}\n\ninterface Manuscript {\n  _id: string;\n  filename: string;\n  metadata: {\n    'MS ID:': string;\n    'Other Names:': string;\n    'Contents:': string;\n    'Date:': string;\n    'Origin:': string;\n    'Total Folia:': string;\n    'Dimensions:': string;\n    'Materials:': string;\n    'Laod. Folia:': string;\n    'Format Description:': string;\n  };\n  verses: {\n    verse_number: number;\n    verse_text: string;\n  }[];\n}\n\n// API base URL - can be configured based on environment\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\n\n// Function to generate word comparisons from MongoDB data\nfunction generateWordComparisons(baseManuscript: Manuscript, comparisonManuscript: Manuscript): WordComparison[] {\n  const comparisons: WordComparison[] = [];\n  \n  // Compare each verse\n  baseManuscript.verses.forEach((baseVerse) => {\n    const comparisonVerse = comparisonManuscript.verses.find(\n      v => v.verse_number === baseVerse.verse_number\n    );\n\n    if (!comparisonVerse) return;\n\n    // Split verses into words and clean them\n    const baseWords = baseVerse.verse_text\n      .toLowerCase()\n      .replace(/[.,()]/g, '')\n      .split(' ')\n      .filter(word => word.length > 0);\n      \n    const comparisonWords = comparisonVerse.verse_text\n      .toLowerCase()\n      .replace(/[.,()]/g, '')\n      .split(' ')\n      .filter(word => word.length > 0);\n\n    // Compare words\n    const maxLength = Math.max(baseWords.length, comparisonWords.length);\n    for (let i = 0; i < maxLength; i++) {\n      const word1 = baseWords[i] || '[missing]';\n      const word2 = comparisonWords[i] || '[missing]';\n      \n      if (word1 !== word2) {\n        comparisons.push({\n          verseNumber: baseVerse.verse_number,\n          word1,\n          word2,\n          position: i + 1,\n          manuscriptSigla: comparisonManuscript.filename.replace('.docx', '')\n        });\n      }\n    }\n  });\n\n  return comparisons;\n}\n\n// API service for manuscript operations\nconst manuscriptService = {\n  async fetchComparisons(): Promise<WordComparison[]> {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/documents/`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch manuscripts');\n      }\n      const data = await response.json();\n      \n      // Find base manuscript (01)\n      const baseManuscript = data.find((m: Manuscript) => m.filename === '02 Paris, Bibliothèque nationale de France, Département des Manuscrits, NAL 1063.docx');\n      if (!baseManuscript) {\n        throw new Error('Base manuscript (01) not found');\n      }\n\n      // Generate comparisons with all other manuscripts\n      const allComparisons: WordComparison[] = [];\n      data.forEach((manuscript: Manuscript) => {\n        if (manuscript.filename !== '01.docx') {\n          const comparisons = generateWordComparisons(baseManuscript, manuscript);\n          allComparisons.push(...comparisons);\n        }\n      });\n\n      return allComparisons;\n    } catch (error) {\n      throw new Error('Error fetching comparisons: ' + (error instanceof Error ? error.message : 'Unknown error'));\n    }\n  },\n\n  async saveComparison(data: {\n    wordComparison: WordComparison;\n    isSignificant: boolean;\n    variationType: string;\n  }): Promise<ComparisonResult> {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/comparisons/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save comparison');\n      }\n\n      return await response.json();\n    } catch (error) {\n      throw new Error('Error saving comparison: ' + (error instanceof Error ? error.message : 'Unknown error'));\n    }\n  },\n};\n\n// Default variation types (same as in Settings.tsx)\nconst defaultVariationTypes = [\n  \"Different Spelling\",\n  \"Abbreviation\",\n  \"Word Choice\",\n  \"Word Order\",\n  \"Addition\",\n  \"Omission\"\n];\n\nfunction ManualDifferentiation() {\n  const { settings } = useDisplaySettings();\n  const [variations, setVariations] = useState<WordComparison[]>([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [completedCount, setCompletedCount] = useState(0);\n  const [isSignificant, setIsSignificant] = useState(true);\n  const [variationType, setVariationType] = useState('Different Spelling');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [isFetchingData, setIsFetchingData] = useState(true);\n  const [variationTypes, setVariationTypes] = useState<string[]>(defaultVariationTypes);\n  const toast = useToast();\n\n  // Color mode values\n  const boxBg = settings.theme === 'dark' ? 'gray.800' : 'white';\n  const boxBorderColor = settings.theme === 'dark' ? 'gray.600' : 'gray.200';\n  const textColor = settings.theme === 'dark' ? 'gray.100' : 'gray.600';\n  const inputBg = settings.theme === 'dark' ? 'gray.700' : 'gray.50';\n  const inputBorderColor = settings.theme === 'dark' ? 'gray.500' : 'gray.300';\n\n  // Load variation types on mount\n  useEffect(() => {\n    const savedTypes = localStorage.getItem('variationTypes');\n    if (savedTypes) {\n      try {\n        const types = JSON.parse(savedTypes);\n        setVariationTypes(types);\n        // If current variationType is not in the new types, reset to first type\n        if (!types.includes(variationType)) {\n          setVariationType(types[0]);\n        }\n      } catch (error) {\n        console.error('Error loading variation types:', error);\n      }\n    }\n  }, [variationType]);\n\n  // Fetch variations on component mount\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setIsFetchingData(true);\n        setError(null);\n        const data = await manuscriptService.fetchComparisons();\n        setVariations(data);\n      } catch (error) {\n        setError(error instanceof Error ? error.message : 'Failed to fetch comparisons');\n        toast({\n          title: 'Error fetching comparisons',\n          description: error instanceof Error ? error.message : 'Unknown error occurred',\n          status: 'error',\n          duration: 5000,\n          isClosable: true,\n        });\n      } finally {\n        setIsFetchingData(false);\n      }\n    }\n\n    fetchData();\n  }, [toast]);\n\n  const currentVariation = variations[currentIndex];\n  const currentNumber = currentIndex + 1;\n  const totalVariations = variations.length;\n\n  async function handleConfirm() {\n    if (!currentVariation) return;\n\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const result = await manuscriptService.saveComparison({\n        wordComparison: currentVariation,\n        isSignificant,\n        variationType,\n      });\n\n      setCompletedCount(prev => prev + 1);\n      setCurrentIndex(prev => prev + 1);\n\n      toast({\n        title: 'Variation recorded',\n        description: `Comparison saved with ID: ${result.comparisonId}`,\n        status: 'success',\n        duration: 2000,\n        isClosable: true,\n      });\n    } catch (error) {\n      setError(error instanceof Error ? error.message : 'Failed to save comparison');\n      toast({\n        title: 'Error recording variation',\n        description: error instanceof Error ? error.message : 'Unknown error occurred',\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function handleSkip() {\n    setCurrentIndex(prev => prev + 1);\n  }\n\n  if (isFetchingData) {\n    return (\n      <Box>\n        <NavigationBar />\n        <Box>\n          <Box bg=\"#08004F\" py={8} px={6} position=\"relative\">\n            <Heading fontWeight=\"normal\" ml={8} color=\"lightgray\" size=\"lg\">Manual Differentiation</Heading>\n          </Box>\n          <Box p={8} textAlign=\"center\">\n            <Spinner size=\"xl\" />\n            <Text mt={4} color={textColor}>Loading comparisons...</Text>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box>\n        <NavigationBar />\n        <Box>\n          <Box bg=\"#08004F\" py={8} px={6} position=\"relative\">\n            <Heading fontWeight=\"normal\" ml={8} color=\"lightgray\" size=\"lg\">Manual Differentiation</Heading>\n          </Box>\n          <Box p={8}>\n            <Alert status=\"error\">\n              <AlertIcon />\n              {error}\n            </Alert>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n\n  if (!currentVariation) {\n    return (\n      <Box>\n        <NavigationBar />\n        <Box>\n          <Box bg=\"#08004F\" py={8} px={6} position=\"relative\">\n            <Heading fontWeight=\"normal\" ml={8} color=\"lightgray\" size=\"lg\">Manual Differentiation</Heading>\n          </Box>\n          <Box p={8} textAlign=\"center\">\n            <Text fontSize=\"xl\">All variations have been processed.</Text>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <NavigationBar />\n      <Box>\n        <Box bg=\"#08004F\" py={8} px={6} position=\"relative\">\n          <Heading fontWeight=\"normal\" ml={8} color=\"lightgray\" size=\"lg\">Manual Differentiation</Heading>\n        </Box>\n\n        <Box p={8} maxW=\"800px\" mx=\"auto\">\n          <VStack spacing={8} align=\"stretch\">\n            <Box textAlign=\"center\">\n              <Text fontSize=\"2xl\" mb={4} color={textColor}>\n                {currentNumber} out of {totalVariations} variations completed\n              </Text>\n              <Progress \n                value={(currentNumber / totalVariations) * 100} \n                size=\"sm\" \n                colorScheme=\"blue\" \n                borderRadius=\"full\"\n              />\n            </Box>\n\n            <Box \n              borderWidth={1} \n              borderColor={boxBorderColor}\n              borderRadius=\"lg\" \n              p={8}\n              bg={boxBg}\n              boxShadow=\"sm\"\n            >\n              <VStack spacing={6} align=\"stretch\">\n                <HStack spacing={4} justify=\"center\">\n                  <Text fontSize=\"2xl\" fontWeight=\"medium\" color={textColor}>01</Text>\n                  <Text fontSize=\"2xl\" fontWeight=\"medium\" color={textColor}>vs.</Text>\n                  <Text fontSize=\"2xl\" fontWeight=\"medium\" color={textColor}>{currentVariation.manuscriptSigla}</Text>\n                </HStack>\n\n                <Text textAlign=\"center\" fontSize=\"md\" color={textColor}>\n                  Verse {currentVariation.verseNumber}, Word {currentVariation.position}\n                </Text>\n\n                <VStack spacing={4}>\n                  <Box \n                    w=\"100%\" \n                    p={4} \n                    borderWidth={1} \n                    borderColor={inputBorderColor}\n                    borderRadius=\"md\"\n                    textAlign=\"center\"\n                    bg={inputBg}\n                  >\n                    <Text fontSize=\"xl\" color={textColor}>{currentVariation.word1}</Text>\n                    <Text fontSize=\"sm\" color={textColor} mt={1}>Manuscript 01</Text>\n                  </Box>\n                  \n                  <Text fontSize=\"lg\" color={textColor}>vs.</Text>\n                  \n                  <Box \n                    w=\"100%\" \n                    p={4} \n                    borderWidth={1} \n                    borderColor={inputBorderColor}\n                    borderRadius=\"md\"\n                    textAlign=\"center\"\n                    bg={inputBg}\n                  >\n                    <Text fontSize=\"xl\" color={textColor}>{currentVariation.word2}</Text>\n                    <Text fontSize=\"sm\" color={textColor} mt={1}>Manuscript {currentVariation.manuscriptSigla}</Text>\n                  </Box>\n                </VStack>\n\n                <Box>\n                  <HStack spacing={0} mb={6}>\n                    <Button\n                      flex={1}\n                      bg={isSignificant ? \"green.500\" : settings.theme === 'dark' ? \"gray.700\" : \"gray.200\"}\n                      color={isSignificant ? \"white\" : textColor}\n                      onClick={() => setIsSignificant(true)}\n                      _hover={{ bg: isSignificant ? \"green.600\" : settings.theme === 'dark' ? \"gray.600\" : \"gray.300\" }}\n                      borderRightRadius={0}\n                      py={6}\n                    >\n                      Significant\n                    </Button>\n                    <Button\n                      flex={1}\n                      bg={!isSignificant ? \"gray.500\" : settings.theme === 'dark' ? \"gray.700\" : \"gray.200\"}\n                      color={!isSignificant ? \"white\" : textColor}\n                      onClick={() => setIsSignificant(false)}\n                      _hover={{ bg: !isSignificant ? \"gray.600\" : settings.theme === 'dark' ? \"gray.600\" : \"gray.300\" }}\n                      borderLeftRadius={0}\n                      py={6}\n                    >\n                      Insignificant\n                    </Button>\n                  </HStack>\n\n                  <Box mb={6}>\n                    <Text mb={2} color={textColor}>Variation type</Text>\n                    <Select\n                      value={variationType}\n                      onChange={(e) => setVariationType(e.target.value)}\n                      size=\"lg\"\n                      borderColor={inputBorderColor}\n                      bg={inputBg}\n                      color={textColor}\n                      _hover={{ borderColor: settings.theme === 'dark' ? \"gray.400\" : \"gray.500\" }}\n                    >\n                      {variationTypes.map((type) => (\n                        <option key={type} value={type}>{type}</option>\n                      ))}\n                    </Select>\n                  </Box>\n\n                  <Flex gap={4} justify=\"space-between\">\n                    <Button\n                      bg=\"#B8860B\"\n                      color=\"white\"\n                      _hover={{ bg: \"#9A7B0A\" }}\n                      onClick={handleSkip}\n                      size=\"lg\"\n                      px={8}\n                      isDisabled={isLoading}\n                      borderRadius=\"full\"\n                    >\n                      Skip for later\n                    </Button>\n                    <Button\n                      colorScheme=\"green\"\n                      onClick={handleConfirm}\n                      size=\"lg\"\n                      px={12}\n                      isLoading={isLoading}\n                      loadingText=\"Confirming...\"\n                      borderRadius=\"full\"\n                    >\n                      Confirm\n                    </Button>\n                  </Flex>\n                </Box>\n              </VStack>\n            </Box>\n          </VStack>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default ManualDifferentiation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}